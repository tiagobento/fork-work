#
# Copyright 2018 Red Hat, Inc. and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
ImpossibleMatch=Impossible match
RuleHasNoAction=Rule has no action
RuleHasNoRestrictionsAndWillAlwaysFire=Rule has no restrictions and will always fire.
MultipleValuesForOneAction=Multiple values for one action.
ConstrainsForFieldXOfFactYAreRedundantTheyWillAlwaysPass=Constrains for field {0} fact {1} are redundant. They will always pass.
SubsumptantRows=Subsumptant rows
DeficientRow=Deficient row.
ValueForFactFieldIsSetTwice=Value for {0}.{1} is set twice.
ValueForAnActionIsSetTwice=Value for an action is set twice.
RedundantConditionsNote1P1=Conditions for field {0}.{1} are redundant
AffectedRows=Affected rows
WhenARuleHasNoActionItDoesFireButSinceTheActionSideIsEmptyNothingHappens=When a rule has no action it does fire, but since the action side is empty nothing happens.
ItIsPossibleThatTheActionsWereLeftOutByAccidentInThisCasePleaseAddThemOtherwiseTheRuleCanNeRemoved=It is possible that the actions were left out by accident. In this case please add them. Otherwise the rule can be removed.
ProvideAtLeastOneConditionAndOneActionForTheRule=Please provide at least one condition and one action for the rule.
ConflictingRows=Conflicting rows
ConflictingRowsP1=Conflict between two rows exists when the conditions for both rules are met with a same set of facts, but the actions set existing fact fields to different values. The conditions can be redundant or subsumptant.
ConflictingRowsP2=Since the actions do different things with the same conditions, it is impossible to know which actions end up activating last. This causes the rule set to be inconsistent. To fix this, please either remove one row or make the conditions more strict.
RedundantRows=Redundant rows
DeficientRowsP1=Deficient rule has actions which conflict with another rule and conditions that do not overlap with the other rule.
DeficientRowsNoteP1=Loan is approved if savings are over 100 000 and rejected if salary is less than 30 000. There might be an applicant with salary less than 30 000 and savings over 100 000, in this case both rows fire, but since we do not know the firing order it is impossible to know if the application is rejected or approved.
Salary=Salary
Savings=Savings
ApproveLoan=Approve loan
DeficientRowsP2=Since the deficient rule can fire at the same time as an another rule, it is impossible to know which actions end up activating last. This causes the rule set to be inconsistent. To fix this, please either remove the deficient rule or make the conditions more strict.
ImpossibleMatchNote1P1=The impossible match is on row {0} for field {1} of pattern {2}.
ImpossibleMatchNote1P2=Conflicting conditions are {0} and {1}.
ImpossibleMatchP1=A rule that has an impossible match between conditions never activates. Please fix the conditions for {0}.
MissingConditionP1=When a rule has no conditions the actions are always executed. Please add conditions if this is not what was intended.
MultipleValuesP1=Rule has multiple actions. Either the rule is setting a field to a value or it is running the same function twice.
MultipleValuesNote1P1=Actions that raised this issue are {0} and {1}
RedundantActionsP1=There are two redundant actions. One of them can be removed.
RedundantActionsNote1P1=The redundant actions are {0} and {1}
RedundantConditionsTitle=Redundant conditions
RedundantConditionsP1=Having more than one condition check with the same value does not affect the rule functionality in anyway, but only one is needed. It is recommended that any useless conditions are removed.
RedundantConditionsNote1P2=Redundant conditions are {0} and {1}
RedundantRowsP1=Redundancy exists when two rows do the same actions with the same given set of facts.
RedundantRowsP2=Redundancy might not be a problem if the redundant rules are setting a value on an existing fact, this just sets the value twice. Problems occur when the two rules increase a counter or add more facts into the working memory. In both cases the other row is not needed.
RedundantRowsP3=To fix this, please remove one of the redundant rows.
SubsumptantRowsP1=Subsumption exists when one row does the same thing as another, with a sub set of the values/facts of an another rule.
SubsumptantRowsP2=These rules might insert duplicate facts into the working memory or execute functions twice. If this is not expected behaviour please remove the subsumptant row or make it more strict.
AnalysingChecks0To1Of2=Running checks {0} to {1} of {2}...
MissingRangeTitle=Missing range
MissingRangeP1=The decision table row {0} is missing a counter part that would make the table ranges complete. It can for example check for person.age > 50, but the other rows in the table are not covering the situation when person.age <= 50.
SingleHitLost=Single hit status lost
SingleHitP1=Lines {0} and {1} can be satisfied with the same facts. This means more than one row from this table can fire at the same time and the table no longer has the single hit status.
AnalysisComplete=Analysis complete
EmptyRule=Rule is empty
Analysis=Analysis
VerifierFailedTitle=Verifier error
VerifierFailed=Verifier failed to run. This can be caused by a table that does not compile.
